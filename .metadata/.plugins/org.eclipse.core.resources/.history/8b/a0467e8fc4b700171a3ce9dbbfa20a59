package com.qq.client.model;
import java.net.*;
import java.io.*;

import com.qq.client.manager.ManagerChatDialog;
import com.qq.common.*;
import java.util.*;

public class ClientConServerThread extends Thread{

	Socket s;
	Vector<LoginInfo> friendList =new Vector<LoginInfo>();
	public ClientConServerThread(Socket s){
		this.s = s;
	}
	
	
	public Socket getS() {
		return s;
	}


	public void setS(Socket s) {
		this.s = s;
	}
	public void addFriendList(LoginInfo info){
		friendList.add(info);
	}
	public int getListSize(){
		return friendList.size();
	}
	public LoginInfo getFriendList(int index){
		LoginInfo info = null;
		if (index < getListSize() && index >= 0)
			info = friendList.get(index);
		return info;
	}


	@Override
	public void run(){
		while(true){
			try{
				ObjectInputStream ois = new ObjectInputStream(s.getInputStream());
				Message m = (Message) ois.readObject();
				String dialogID =m.getReciever()+"#"+m.getSender();
				if(ManagerChatDialog.isOpenDialog(dialogID)){
					ManagerChatDialog.getChatDialog(dialogID).ShowMessage(m);
				}
				//TODO if the dialog is not open do some thing
				System.out.println(m.getSender()+ "发送给"+m.getReciever()+"\n"+m.getMessage());
			}catch(Exception e){
				e.printStackTrace();
				//TODO To stop the thread when Log Out or closed window
				break;
			}
		}
		
	}
}
